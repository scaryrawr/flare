name: Validate Flare Prompt

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  validate:
    name: Validate on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install Zig
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            choco install zig
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install zig
          elif [ "$RUNNER_OS" == "Linux" ]; then
            # Source Homebrew for Linux (needed as it doesn't happen by default)
            eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
            brew install zig
          else
            echo "Unsupported runner OS"
            exit 1
          fi
        shell: bash

      - name: Validate Flare loads successfully
        shell: pwsh
        run: |
          # For Linux, make sure Homebrew is in the PATH so we can find Zig
          if ($env:RUNNER_OS -eq "Linux") {
            $brewEnv = bash -c "/home/linuxbrew/.linuxbrew/bin/brew shellenv"
            foreach ($line in $brewEnv) {
              if ($line -match "export ([^=]+)=(.*)") {
                $varName = $matches[1]
                $varValue = $matches[2].Trim('"')
                [Environment]::SetEnvironmentVariable($varName, $varValue)
                # Also update the PATH for this session if needed
                if ($varName -eq "PATH") {
                  $env:PATH = $varValue
                }
              }
            }
            Write-Host "Added Homebrew to environment for Linux"
          }

          # Import the module
          Import-Module ${{ github.workspace }}/flare.psm1 -ErrorAction Stop

          # Verify module was imported successfully
          if ($?) {
            Write-Host "✅ Flare prompt module loaded successfully on ${{ runner.os }}"
          } else {
            Write-Host "❌ Failed to load Flare prompt module on ${{ runner.os }}"
            exit 1
          }

      - name: Validate all Flare pieces work correctly
        shell: pwsh
        run: |
          # For Linux, make sure Homebrew is in the PATH so we can find Zig
          if ($env:RUNNER_OS -eq "Linux") {
            $brewEnv = bash -c "/home/linuxbrew/.linuxbrew/bin/brew shellenv"
            foreach ($line in $brewEnv) {
              if ($line -match "export ([^=]+)=(.*)") {
                $varName = $matches[1]
                $varValue = $matches[2].Trim('"')
                [Environment]::SetEnvironmentVariable($varName, $varValue)
                # Also update the PATH for this session if needed
                if ($varName -eq "PATH") {
                  $env:PATH = $varValue
                }
              }
            }
            Write-Host "Added Homebrew to environment for Linux"
          }

          # Run the testPiecesTiming.ps1 script which will validate all pieces
          # The script will exit with a non-zero code if any piece fails to load or execute correctly
          Write-Host "Running piece validation test on ${{ runner.os }}..."
          & ${{ github.workspace }}/testPiecesTiming.ps1

          if ($?) {
            Write-Host "✅ All Flare pieces validated successfully on ${{ runner.os }}"
          } else {
            Write-Host "❌ Flare piece validation failed on ${{ runner.os }}"
            exit 1
          }
